name: Build
on:
  push:
    branches:
      - '*'
  pull_request:

jobs:
  build-ubuntu:
    runs-on: ubuntu-24.04
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install libgtk-4-dev build-essential
          pkg-config --modversion gtk4
          pkg-config --cflags gtk4
          pkg-config --libs gtk4
      - name: Build
        run: |
          cd ${{ github.workspace }}
          RUSTFLAGS='-C target-feature=+crt-static' cargo build --verbose --release --target x86_64-unknown-linux-gnu --bin gdt2dicom --bin dicom2gdt --bin gdt2opp --bin gdt2vdds
          cargo build --verbose --release --target x86_64-unknown-linux-gnu --bin gui
      - name: Check format
        run: |
          cd ${{ github.workspace }}
          rustfmt --check src/**/*.rs
      - name: 'Upload Artifact'
        uses: actions/upload-artifact@v3
        with:
          name: Linux artifact
          path: |
            ./target/x86_64-unknown-linux-gnu/release/gdt2dicom
            ./target/x86_64-unknown-linux-gnu/release/dicom2gdt
            ./target/x86_64-unknown-linux-gnu/release/gdt2opp
            ./target/x86_64-unknown-linux-gnu/release/gdt2vdds
            ./target/x86_64-unknown-linux-gnu/release/gui
          retention-days: 5

  build-windows:
    runs-on: windows-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Install dependencies
        run: |
          choco install msys2 visualstudio2022-workload-vctools python312 pkgconfiglite gtk-runtime
          py -3.12 -m pip install --user pipx
          py -3.12 -m pipx ensurepath
          pipx install gvsbuild
          gvsbuild build gtk4
      - name: Build
        run: |
          cd ${{ github.workspace }}
          $env:PKG_CONFIG_PATH="/mingw64/lib/pkgconfig;/mingw64/share/pkgconfig;C:/gtk-build/gtk/x64/release/lib/pkgconfig"
          cargo build --verbose --release
      - name: 'Upload Artifact'
        uses: actions/upload-artifact@v3
        with:
          name: Windows artifact
          path: |
            .\target\release\gdt2dicom.exe
            .\target\release\dicom2gdt.exe
            .\target\release\gdt2opp.exe
            .\target\release\gdt2vdds.exe
            .\target\release\gui.exe
          retention-days: 5

  build-windows-gui:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/mglolenstine/gtk4-cross:gtk-4.12
    steps:
      - uses: actions/checkout@v1
      - name: Install additional dependencies
        # gio is for the build script
        run: |
          dnf install mingw64-poppler mingw64-poppler-glib mingw32-python3 rust-gio-devel adwaita-icon-theme wget gtk4-devel gcc vulkan -y && dnf clean all -y
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: x86_64-pc-windows-gnu
      - name: Cache ~/.cargo
        uses: actions/cache@v1
        with:
          path: ~/.cargo
          key: windows-dotcargo
      - name: Cache cargo build
        uses: actions/cache@v1
        with:
          path: target
          key: windows-build-target
      - name: Cross compile for Windows
        run: |
          #!/bin/bash
          set -euo pipefail
          export PKG_CONFIG_PATH=/usr/lib64/pkgconfig:/usr/share/pkgconfig:$MINGW_PREFIX/lib/pkgconfig/:/usr/x86_64-w64-mingw32/lib/pkgconfig/

          cargo build --target=x86_64-pc-windows-gnu --release --locked --bin gui

          mkdir -p package
          cp target/x86_64-pc-windows-gnu/release/*.exe package/
          # package/gui.exe
      - name: Package
        run: |
          #!/bin/bash
          set -euo pipefail

          package

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: windows-gui
          path: |
            ./package
          if-no-files-found: error

  build-mac:
    runs-on: macos-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Install dependencies
        run: |
          brew install gtk4
      - name: Build
        run: |
          cd ${{ github.workspace }}
          cargo build --release
      - name: Check format
        run: |
          cd ${{ github.workspace }}
          rustfmt --check src/**/*.rs
      - name: 'Upload Artifact'
        uses: actions/upload-artifact@v3
        with:
          name: Mac Artifact
          path: |
            ./target/release/gdt2dicom
            ./target/release/dicom2gdt
            ./target/release/gdt2opp
            ./target/release/gdt2vdds
            ./target/release/gui
          retention-days: 5
